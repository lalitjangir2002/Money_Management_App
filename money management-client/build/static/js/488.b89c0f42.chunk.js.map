{"version":3,"file":"static/js/488.b89c0f42.chunk.js","mappings":"sPA+IA,QAtIA,SAAeA,GAAuB,IAAtB,gBAAEC,GAAiBD,EACjC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KAChDS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GACjCW,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA8CjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,SAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAAAJ,UACxBC,EAAAA,EAAAA,KAAA,UAAQI,IAAKC,EAAOC,KAAK,mBAG7BT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,aAChCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAC,8DAElCF,EAAAA,EAAAA,MAAA,QAAMU,SAvDSC,UAEnB,GADAC,EAAEC,iBACG9B,GAAUO,GAAaE,GAAoBN,GAAcE,EAM9D,IACE,MAAM0B,EAAgBC,EAAAA,EAAiBC,MAAM,CAC3CjC,QACAO,WACAJ,YACAE,aAGF,GAAIE,IAAaE,EAEf,YADAV,EAAgB,0BAA2B,SAI7Ca,GAAW,SAELC,GAASqB,EAAAA,EAAAA,IAAWH,IAAgBI,SAC1CpC,EAAgB,6CAA8C,WAE9Da,GAAW,GACXG,EAAS,SACX,CAAE,MAAOqB,GAAM,IAADC,EAAAC,EAAAC,EAAAC,EACmB,WAAd,QAAbH,EAAAD,EAAIK,OAAO,UAAE,IAAAJ,OAAA,EAAbA,EAAeK,KAAK,IACtB3C,EAAgB,6CAA8C,SAC1B,cAAd,QAAbuC,EAAAF,EAAIK,OAAO,UAAE,IAAAH,OAAA,EAAbA,EAAeI,KAAK,IAC7B3C,EAAgB,iEAAkE,SAC9C,eAAd,QAAbwC,EAAAH,EAAIK,OAAO,UAAE,IAAAF,OAAA,EAAbA,EAAeG,KAAK,IAC7B3C,EAAgB,iEAAkE,SAC9C,cAAd,QAAbyC,EAAAJ,EAAIK,OAAO,UAAE,IAAAD,OAAA,EAAbA,EAAeE,KAAK,IAC7B3C,EAAgB,gEAAiE,SAEjFA,EAAgB,mCAAoC,SAEtDa,GAAW,EACb,MAtCEb,EAAgB,6BAA8B,QAsChD,EAckCmB,UAAU,YAAWC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLiB,MAAOxC,EACPyC,SAAWf,GAAMzB,EAAayB,EAAEgB,OAAOF,OACvCG,UAAQ,EACR5B,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,kBAEhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLiB,MAAOtC,EACPuC,SAAWf,GAAMvB,EAAYuB,EAAEgB,OAAOF,OACtCG,UAAQ,EACR5B,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,iBAEhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,QACLiB,MAAO3C,EACP4C,SAAWf,GAAM5B,EAAS4B,EAAEgB,OAAOF,OACnCG,UAAQ,EACR5B,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,cAGhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLiB,MAAOpC,EACPqC,SAAWf,GAAMrB,EAAYqB,EAAEgB,OAAOF,OACtCG,UAAQ,EACR5B,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,iBAGhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLiB,MAAOlC,EACPmC,SAAWf,GAAMnB,EAAmBmB,EAAEgB,OAAOF,OAC7CG,UAAQ,EACR5B,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,yBAGhCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASR,UAAU,cAAaC,SAAC,eAGhDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,6BAAyBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,GAAG,SAAS9B,UAAU,YAAWC,SAAC,mBAIxEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAc,CAACtC,QAASA,SAIjC,C,2ECzIA,MAaA,EAbuBb,IAAgB,IAAf,QAACa,GAAQb,EAC/B,OACEsB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CACTC,GAAI,CAAEC,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAC9DC,KAAM7C,EAAQQ,UAEdC,EAAAA,EAAAA,KAACqC,EAAAA,EAAgB,CAACL,MAAM,eAEtB,C,wDCXH,MAAMM,EAAkBC,EAAAA,EAAEC,OAAO,CACtC5D,MAAO2D,EAAAA,EAAEE,SAAS7D,QAClBO,SAAUoD,EAAAA,EAAEE,SAASC,IAAI,KAGd9B,EAAmB2B,EAAAA,EAAEC,OAAO,CACrC5D,MAAO2D,EAAAA,EAAEE,SAAS7D,QAClBO,SAAUoD,EAAAA,EAAEE,SAASC,IAAI,GACzB3D,UAAWwD,EAAAA,EAAEE,SAASC,IAAI,GAC1BzD,SAAUsD,EAAAA,EAAEE,SAASC,IAAI,I","sources":["Auth/SignUp.js","components/UI/CustomBackDrop.js","components/UI/formValidation/LoginFormSchema.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { signupUser } from '../components/redux/features/AuthSlice';\r\nimport CustomBackDrop from '../components/UI/CustomBackDrop';\r\nimport video from \"../assets/form_video.mp4\";\r\nimport { SignUpFormSchema } from '../components/UI/formValidation/LoginFormSchema';\r\nimport './signup.css';\r\n\r\nfunction SignUp({ triggerSnackbar }) {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!email || !password || !confirmPassword || !firstName || !lastName) {\r\n      triggerSnackbar('Please fill in all fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    \r\n    try {\r\n      const validatedData = SignUpFormSchema.parse({\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n      });\r\n      \r\n      if (password !== confirmPassword) {\r\n        triggerSnackbar('Passwords do not match.', 'error');\r\n        return;\r\n      }\r\n      \r\n      setLoading(true);\r\n\r\n      await dispatch(signupUser(validatedData)).unwrap();\r\n      triggerSnackbar('Account Created Successfully, Please Login', 'success');\r\n\r\n      setLoading(false);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      if (err.errors[0]?.path[0] === 'email') {\r\n        triggerSnackbar('Invalid email. Please enter a valid email.', 'error');\r\n      } else if (err.errors[0]?.path[0] === 'password') {\r\n        triggerSnackbar('Invalid password. Password must be at least 6 characters long.', 'error');\r\n      } else if (err.errors[0]?.path[0] === 'firstName') {\r\n        triggerSnackbar('First name is required and must be at least 2 characters long.', 'error');\r\n      } else if (err.errors[0]?.path[0] === 'lastName') {\r\n        triggerSnackbar('Last name is required and must be at least 2 characters long.', 'error');\r\n      } else {\r\n        triggerSnackbar('Signup failed. Please try again.', 'error');\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-page-container\">\r\n      <div className=\"video-container\">\r\n        <video autoPlay muted loop>\r\n          <source src={video} type=\"video/mp4\" />\r\n        </video>\r\n      </div>\r\n      <div className=\"auth-form-container\">\r\n        <h2 className=\"auth-form-title\">SIGN UP</h2>\r\n        <p className=\"auth-form-subtitle\">Please Enter your Email, Password, and Confirm Password!</p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">FirstName</label>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">LastName</label>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Email</label>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Password</label>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Confirm Password</label>\r\n          </div>\r\n\r\n          <div className=\"auth-button-container\">\r\n            <button type=\"submit\" className=\"auth-button\">Sign Up</button>\r\n          </div>\r\n\r\n          <div className=\"form-links\">\r\n            <p>Already have an account? <Link to=\"/login\" className=\"auth-link\">Login</Link></p>\r\n          </div>\r\n        </form>\r\n\r\n        <CustomBackDrop loading={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from 'react'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst CustomBackDrop = ({loading}) => {\r\n  return (\r\n    <div>\r\n        <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={loading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomBackDrop;","import { z } from 'zod';\r\n\r\nexport const LoginFormSchema = z.object({\r\n  email: z.string().email(),\r\n  password: z.string().min(6),\r\n});\r\n\r\nexport const SignUpFormSchema = z.object({\r\n    email: z.string().email(),\r\n    password: z.string().min(6),\r\n    firstName: z.string().min(2),\r\n    lastName: z.string().min(2),\r\n  });"],"names":["_ref","triggerSnackbar","email","setEmail","useState","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","dispatch","useDispatch","navigate","useNavigate","_jsxs","className","children","_jsx","autoPlay","muted","loop","src","video","type","onSubmit","async","e","preventDefault","validatedData","SignUpFormSchema","parse","signupUser","unwrap","err","_err$errors$","_err$errors$2","_err$errors$3","_err$errors$4","errors","path","value","onChange","target","required","Link","to","CustomBackDrop","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","LoginFormSchema","z","object","string","min"],"sourceRoot":""}