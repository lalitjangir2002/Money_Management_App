{"version":3,"file":"static/js/488.1051901e.chunk.js","mappings":"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","sources":["Auth/SignUp.js","components/UI/CustomBackDrop.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { signupUser } from '../components/redux/features/AuthSlice';\r\nimport CustomBackDrop from '../components/UI/CustomBackDrop';\r\nimport video from \"../assets/form_video.mp4\";\r\nimport './signup.css';\r\n\r\nfunction SignUp({ triggerSnackbar }) {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation\r\n    if (!email || !password || !confirmPassword || !firstName || !lastName) {\r\n      triggerSnackbar('Please fill in all fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      triggerSnackbar('Passwords do not match.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      triggerSnackbar('Password must be at least 6 characters long.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (firstName.length < 2) {\r\n      triggerSnackbar('First name must be at least 2 characters long.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (lastName.length < 2) {\r\n      triggerSnackbar('Last name must be at least 2 characters long.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) { // Simple email validation regex\r\n      triggerSnackbar('Invalid email. Please enter a valid email.', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      await dispatch(signupUser({ email, password, firstName, lastName })).unwrap();\r\n      triggerSnackbar('Account Created Successfully, Please Login', 'success');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      triggerSnackbar('Signup failed. Please try again.', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-page-container\">\r\n      <div className=\"video-container\">\r\n        <video autoPlay muted loop>\r\n          <source src={video} type=\"video/mp4\" />\r\n        </video>\r\n      </div>\r\n      <div className=\"auth-form-container\">\r\n        <h2 className=\"auth-form-title\">SIGN UP</h2>\r\n        <p className=\"auth-form-subtitle\">Please Enter your Email, Password, and Confirm Password!</p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">FirstName</label>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">LastName</label>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Email</label>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Password</label>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <label className=\"auth-label\">Confirm Password</label>\r\n          </div>\r\n\r\n          <div className=\"auth-button-container\">\r\n            <button type=\"submit\" className=\"auth-button\">Sign Up</button>\r\n          </div>\r\n\r\n          <div className=\"form-links\">\r\n            <p>Already have an account? <Link to=\"/login\" className=\"auth-link\">Login</Link></p>\r\n          </div>\r\n        </form>\r\n\r\n        <CustomBackDrop loading={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from 'react'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst CustomBackDrop = ({loading}) => {\r\n  return (\r\n    <div>\r\n        <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={loading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomBackDrop;"],"names":["_ref","triggerSnackbar","email","setEmail","useState","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","dispatch","useDispatch","navigate","useNavigate","_jsxs","className","children","_jsx","autoPlay","muted","loop","src","video","type","onSubmit","async","e","preventDefault","length","test","signupUser","unwrap","err","value","onChange","target","required","Link","to","CustomBackDrop","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress"],"sourceRoot":""}