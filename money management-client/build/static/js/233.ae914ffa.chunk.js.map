{"version":3,"file":"static/js/233.ae914ffa.chunk.js","mappings":"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","sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/NewExpenseItem.js"],"sourcesContent":["import './Card.css'\r\n\r\nexport default function Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport './ExpenseFilter.css'\r\n\r\nexport default function ExpenseFilter(props){\r\nconst dropDownChangeHandler =(event)=>{\r\nprops.onFilterChange(event.target.value)\r\n}\r\n    return ( \r\n    <div className=\"expenses-filter\">\r\n        <div className=\"expenses-filter__control\">\r\n            <label htmlFor=\"\">Filter By Year</label>\r\n            <select value={props.selected} onChange={dropDownChangeHandler}>\r\n            <option value=\"2025\">2025</option>\r\n            <option value=\"2024\">2024</option>\r\n            <option value=\"2023\">2023</option>\r\n            <option value=\"2022\">2022</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    )\r\n};","import './ExpenseDate.css';\r\n\r\nexport default function ExpenseDate({ date }) {\r\n    const expenseDate = new Date(date);\r\n    const formattedDate = expenseDate.toLocaleDateString('en-US', {\r\n        day: '2-digit',\r\n        year: 'numeric',\r\n        month: 'short',\r\n    });\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__formatted'>{formattedDate}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './ExpenseList.css';\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card';\r\n\r\nexport default function ExpenseList(props) {\r\n    // console.log(props.items);\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Such Expenses found.</h2>;\r\n    }\r\n    \r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <li key={expense.id}>\r\n                    <Card className='expense-item'>\r\n                        <ExpenseDate date={expense.date} />\r\n                        <div className='expense-item__description'>\r\n                            <h2>{expense.title}</h2>\r\n                            <div className=\"expense-item_layout\">\r\n                            <div className='expense-item__price'>â‚¹{expense.amount}</div>\r\n                            <button className='btn' onClick={() => props.onDeleteExpense(expense.id)}>Remove</button>   \r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nexport default function ChartBar(props){\r\nlet barfillHeight = '0%';\r\n\r\nif(props.maxValue > 0){\r\nbarfillHeight = Math.round((props.value/props.maxValue) * 100) + '%';\r\n}\r\n\r\nreturn (\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barfillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nexport default function Chart(props){\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n        {props.dataPoints.map((dataPoint)=>(\r\n        <ChartBar \r\n        key = {dataPoint.label}\r\n        value = {dataPoint.value}\r\n        maxValue = {totalMaximum}\r\n        label = {dataPoint.label}\r\n        />\r\n        ))}\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpensesChart(props){\r\n    const chartDataPoints = [\r\n        {label:'Jan', value:0 },\r\n        {label:'Feb', value:0 },\r\n        {label:'Mar', value:0 },\r\n        {label:'Apr', value:0 },\r\n        {label:'May', value:0 },\r\n        {label:'Jun', value:0 },\r\n        {label:'Jul', value:0 },\r\n        {label:'Aug', value:0 },\r\n        {label:'Sep', value:0 },\r\n        {label:'Oct', value:0 },\r\n        {label:'Nov', value:0 },\r\n        {label:'Dec', value:0 },\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseDate = new Date(expense.date)\r\n        const expenseMonth = expenseDate.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount; \r\n    }\r\n\r\n    return (\r\n    <Chart dataPoints = {chartDataPoints}/>\r\n    )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './NewExpenseItem.css';\r\nimport { getMoney, deleteMoney } from '../redux/features/dataSlice';\r\n\r\nexport default function NewExpenseItem() {\r\n  const dispatch = useDispatch();\r\n  const expenses = useSelector((state) => state.data.data.items) || [];\r\n  // console.log(expenses)\r\n  const loading = useSelector((state) => state.data.loading);\r\n  const error = useSelector((state) => state.data.error);\r\n  const [filterYear, setFilterYear] = useState('2024');\r\n\r\n  useEffect(() => {\r\n    dispatch(getMoney());\r\n  }, [dispatch]);\r\n\r\n  const filterChangeHandler = (yearSelected) => {\r\n    setFilterYear(yearSelected);\r\n  };\r\n\r\n  const deleteExpenseHandler = (id) => {\r\n    dispatch(deleteMoney(id));\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    const date = new Date(expense.date);\r\n    return date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>Error: {error}</p>}\r\n        <ExpenseFilter selected={filterYear} onFilterChange={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses} onDeleteExpense={deleteExpenseHandler} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Card","props","classes","className","_jsx","children","ExpenseFilter","_jsxs","htmlFor","value","selected","onChange","event","onFilterChange","target","ExpenseDate","_ref","date","formattedDate","Date","toLocaleDateString","day","year","month","ExpenseList","items","length","map","expense","title","amount","onClick","onDeleteExpense","id","ChartBar","barfillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","NewExpenseItem","dispatch","useDispatch","useSelector","state","data","loading","error","filterYear","setFilterYear","useState","useEffect","getMoney","filteredExpenses","filter","getFullYear","toString","yearSelected","deleteMoney"],"sourceRoot":""}