{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Money\\\\money management-client\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseDate = new Date(expense.date);\n    const expenseMonth = expenseDate.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpensesChart;\n;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseDate","Date","date","expenseMonth","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Money/money management-client/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpensesChart(props){\r\n    const chartDataPoints = [\r\n        {label:'Jan', value:0 },\r\n        {label:'Feb', value:0 },\r\n        {label:'Mar', value:0 },\r\n        {label:'Apr', value:0 },\r\n        {label:'May', value:0 },\r\n        {label:'Jun', value:0 },\r\n        {label:'Jul', value:0 },\r\n        {label:'Aug', value:0 },\r\n        {label:'Sep', value:0 },\r\n        {label:'Oct', value:0 },\r\n        {label:'Nov', value:0 },\r\n        {label:'Dec', value:0 },\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseDate = new Date(expense.date)\r\n        const expenseMonth = expenseDate.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount; \r\n    }\r\n\r\n    return (\r\n    <Chart dataPoints = {chartDataPoints}/>\r\n    )\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAC;EACxC,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAE,CAAC,CAC1B;EAED,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAC;IAChC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC;IAC1C,MAAMC,YAAY,GAAGH,WAAW,CAACI,QAAQ,CAAC,CAAC;IAC3CT,eAAe,CAACQ,YAAY,CAAC,CAACN,KAAK,IAAIC,OAAO,CAACO,MAAM;EACzD;EAEA,oBACAb,OAAA,CAACF,KAAK;IAACgB,UAAU,EAAIX;EAAgB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE3C;AAACC,EAAA,GAzBuBlB,aAAa;AAyBpC;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}